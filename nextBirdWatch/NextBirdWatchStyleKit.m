//
//  NextBirdWatchStyleKit.m
//  nextBirdWatch
//
//  Created by Blake McMillian on 11/28/14.
//  Copyright (c) 2014 NeXT. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "NextBirdWatchStyleKit.h"


@implementation NextBirdWatchStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawRootBackgroundView
{
    //// Color Declarations
    UIColor* rootViewControllerBackgroundColor = [UIColor colorWithRed: 0.133 green: 0.192 blue: 0.247 alpha: 1];

    //// rootViewBackgroundLayer Drawing
    UIBezierPath* rootViewBackgroundLayerPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    [rootViewControllerBackgroundColor setFill];
    [rootViewBackgroundLayerPath fill];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 20)];
    [UIColor.blackColor setFill];
    [rectanglePath fill];
}

+ (void)drawRootViewTextFieldContainerWithTextFieldWasSelected: (BOOL)textFieldWasSelected
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* rootViewControllerBackgroundColor = [UIColor colorWithRed: 0.133 green: 0.192 blue: 0.247 alpha: 1];
    UIColor* blueHighLightColor = [UIColor colorWithRed: 0.162 green: 1 blue: 0 alpha: 1];
    UIColor* rootViewTextFieldBackgroundShadowColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Shadow Declarations
    NSShadow* textFieldShadow_notSelected = [NSShadow shadowWithColor: [rootViewTextFieldBackgroundShadowColor colorWithAlphaComponent: 0.77] offset: CGSizeMake(1.1, 4.1) blurRadius: 3];
    NSShadow* textFieldShadow_wasSelected = [NSShadow shadowWithColor: [blueHighLightColor colorWithAlphaComponent: 0.58] offset: CGSizeMake(0.1, -0.1) blurRadius: 9];

    //// Variable Declarations
    NSShadow* textFieldSelectionStatus = textFieldWasSelected == YES ? textFieldShadow_wasSelected : textFieldShadow_notSelected;

    //// textFieldLayerContainer
    {
        //// textFieldLayer_2 Drawing
        UIBezierPath* textFieldLayer_2Path = [UIBezierPath bezierPathWithRect: CGRectMake(4, 0, 371, 58)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, textFieldSelectionStatus.shadowOffset, textFieldSelectionStatus.shadowBlurRadius, [textFieldSelectionStatus.shadowColor CGColor]);
        [blueHighLightColor setFill];
        [textFieldLayer_2Path fill];
        CGContextRestoreGState(context);



        //// textFieldLayer_1 Drawing
        UIBezierPath* textFieldLayer_1Path = [UIBezierPath bezierPathWithRect: CGRectMake(5, 1, 369, 56)];
        [rootViewControllerBackgroundColor setFill];
        [textFieldLayer_1Path fill];
    }
}

+ (void)drawSearchButtonCanvasImageWithSearchButtonWasPressed: (BOOL)searchButtonWasPressed
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Shadow Declarations
    UIColor* buttonShadow = UIColor.blackColor;
    CGSize buttonShadowOffset = CGSizeMake(1.1, -0.1);
    CGFloat buttonShadowBlurRadius = 0;
    
#if !TARGET_INTERFACE_BUILDER
    NSBundle *bundle = [NSBundle mainBundle];
#else
    NSBundle *bundle = [NSBundle bundleForClass:[self class]];
#endif
    NSString *fileName = [bundle pathForResource:@"searchButton3x@3x" ofType:@"png"];

    //// Image Declarations
    UIImage* searchButton3x = [UIImage imageWithContentsOfFile:fileName];
    UIImage* searchButtonWasPressed3x = [UIImage imageNamed: @"searchButtonWasPressed3x@3x.png"];

    //// buttonImage Drawing
    UIBezierPath* buttonImagePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 45, 45)];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, buttonShadowOffset, buttonShadowBlurRadius, [buttonShadow CGColor]);
    CGContextBeginTransparencyLayer(context, NULL);
    CGContextSaveGState(context);
    [buttonImagePath addClip];
    [searchButton3x drawInRect: CGRectMake(0, -2, searchButton3x.size.width, searchButton3x.size.height)];
    CGContextRestoreGState(context);
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    if (searchButtonWasPressed)
    {
        //// buttonImageOverlay Drawing
        UIBezierPath* buttonImageOverlayPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 45, 45)];
        CGContextSaveGState(context);
        [buttonImageOverlayPath addClip];
        [searchButtonWasPressed3x drawInRect: CGRectMake(0, -2, searchButtonWasPressed3x.size.width, searchButtonWasPressed3x.size.height)];
        CGContextRestoreGState(context);
    }
}

+ (void)drawRegexSearchButtonCanvasImageWithRegexButtonWasPressed: (BOOL)regexButtonWasPressed
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Shadow Declarations
    UIColor* buttonShadow = UIColor.blackColor;
    CGSize buttonShadowOffset = CGSizeMake(1.1, -0.1);
    CGFloat buttonShadowBlurRadius = 0;

#if !TARGET_INTERFACE_BUILDER
    NSBundle *bundle = [NSBundle mainBundle];
#else
    NSBundle *bundle = [NSBundle bundleForClass:[self class]];
#endif
    NSString *fileName = [bundle pathForResource:@"regexButton3x@3x" ofType:@"png"];
    
    
    //// Image Declarations
    UIImage* regexButton3x = [UIImage imageWithContentsOfFile:fileName];
    UIImage* regexButtonWasPressed3x = [UIImage imageNamed: @"regexButtonWasPressed3x@3x.png"];

    //// buttonImage Drawing
    UIBezierPath* buttonImagePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 45, 45)];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, buttonShadowOffset, buttonShadowBlurRadius, [buttonShadow CGColor]);
    CGContextBeginTransparencyLayer(context, NULL);
    CGContextSaveGState(context);
    [buttonImagePath addClip];
    [regexButton3x drawInRect: CGRectMake(1, 0, regexButton3x.size.width, regexButton3x.size.height)];
    CGContextRestoreGState(context);
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    if (regexButtonWasPressed)
    {
        //// buttonImageOverlay Drawing
        UIBezierPath* buttonImageOverlayPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 45, 40)];
        CGContextSaveGState(context);
        [buttonImageOverlayPath addClip];
        [regexButtonWasPressed3x drawInRect: CGRectMake(1, 0, regexButtonWasPressed3x.size.width, regexButtonWasPressed3x.size.height)];
        CGContextRestoreGState(context);
    }
}

+ (void)drawMapButtonCanvasImageWithMapButtonWasPressed: (BOOL)mapButtonWasPressed
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Shadow Declarations
    UIColor* buttonShadow = UIColor.blackColor;
    CGSize buttonShadowOffset = CGSizeMake(1.1, -0.1);
    CGFloat buttonShadowBlurRadius = 0;

#if !TARGET_INTERFACE_BUILDER
    NSBundle *bundle = [NSBundle mainBundle];
#else
    NSBundle *bundle = [NSBundle bundleForClass:[self class]];
#endif
    NSString *fileName = [bundle pathForResource:@"mapButton3x@3x" ofType:@"png"];
    
    //// Image Declarations
    UIImage* mapButton3x = [UIImage imageWithContentsOfFile:fileName];
    UIImage* mapButtonWasPressed3x = [UIImage imageNamed: @"mapButtonWasPressed3x@3x.png"];

    //// buttonImage Drawing
    UIBezierPath* buttonImagePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 45, 45)];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, buttonShadowOffset, buttonShadowBlurRadius, [buttonShadow CGColor]);
    CGContextBeginTransparencyLayer(context, NULL);
    CGContextSaveGState(context);
    [buttonImagePath addClip];
    [mapButton3x drawInRect: CGRectMake(1, 0, mapButton3x.size.width, mapButton3x.size.height)];
    CGContextRestoreGState(context);
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    if (mapButtonWasPressed)
    {
        //// buttonImageOverlay Drawing
        UIBezierPath* buttonImageOverlayPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, -1, 45, 45)];
        CGContextSaveGState(context);
        [buttonImageOverlayPath addClip];
        [mapButtonWasPressed3x drawInRect: CGRectMake(1, 0, mapButtonWasPressed3x.size.width, mapButtonWasPressed3x.size.height)];
        CGContextRestoreGState(context);
    }
}

@end



@implementation NSShadow (PaintCodeAdditions)

- (instancetype)initWithColor: (UIColor*)color offset: (CGSize)offset blurRadius: (CGFloat)blurRadius
{
    self = super.init;
    if (self)
    {
        self.shadowColor = color;
        self.shadowOffset = offset;
        self.shadowBlurRadius = blurRadius;
    }
    return self;
}

+ (instancetype)shadowWithColor: (UIColor*)color offset: (CGSize)offset blurRadius: (CGFloat)blurRadius
{
    return [self.alloc initWithColor: color offset: offset blurRadius: blurRadius];
}

- (void)set
{
    CGContextSetShadowWithColor(UIGraphicsGetCurrentContext(), self.shadowOffset, self.shadowBlurRadius, [self.shadowColor CGColor]);
}

@end
